version: 2.1

orbs:
  node: circleci/node@5.0.2

jobs:

  # Build the docker image
  ecs-deploy: &ecs-deploy

    docker:
      - image: cimg/node:16.13

    steps:
      - checkout

      - setup_remote_docker
        version: 20.10.11
        ## only usable on the CircleCI Performance plan
        # docker_layer_caching: true

      - node/install-packages:
          pkg-manager: yarn

      ## only install ecs-deploy-cli (call without yarn)
      # - run:
      #     name: Install ecs-deploy-cli
      #     command: npm install --prefix=$HOME/.local --global poviolabs/ecs-deploy-cli

      - run:
          name: Build Dockerfile and push to ECR
          command: >-
            AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            RELEASE=$CIRCLE_SHA1
            STAGE=$STAGE
            yarn ecs-deploy-cli build --ignore-git-changes
      - run:
          name: Deploy to ECS
          # STAGE is set below
          command: >-
            AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            yarn ecs-deploy-cli deploy --appVersion $CIRCLE_TAG --stage $STAGE --release $CIRCLE_SHA1  --ignore-git-changes

      - run:
          name: Slack message on success
          command: yarn ecs-deploy-cli slack --appVersion $CIRCLE_TAG --stage $STAGE --release $CIRCLE_SHA1 --messageType success

      - run:
          name: Slack message on fail
          command: yarn ecs-deploy-cli slack --appVersion $CIRCLE_TAG --stage $STAGE --release $CIRCLE_SHA1 --messageType failure
          when: on_fail

  ecs-deploy-myapp-dev:
    <<: *ecs-deploy
    environment:
      STAGE: myapp-dev

workflows:
  version: 2
  build-and-deploy:
    jobs:

      # build the docker image and push it to the ECR repository
      #  variables are stored in CircleCI Environment Variables

      - ecs-deploy-myapp-dev:
          filters:
            tags:
              ignore: /.*/
            branches:
              only: myapp-dev
